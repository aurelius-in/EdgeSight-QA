version: "3.8"
services:
  mosquitto:
    image: eclipse-mosquitto:2
    ports:
      - "1883:1883"
  capture:
    build: ../../services/capture
    environment:
      - PREPROCESS_URL=http://preprocess:9002/frame
      - FRAME_RATE_CAP=5
      - CAMERA_URL=${CAMERA_URL:-file:/app/assets/sample.mp4}
      - FRAME_WIDTH=640
      - FRAME_HEIGHT=360
    ports: ["9001:9001"]
    depends_on:
      - preprocess
    volumes:
      - ../../assets:/app/assets:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:9001/readyz').getcode()==200 else sys.exit(1)"]
      interval: 5s
      timeout: 3s
      retries: 10
  preprocess:
    build: ../../services/preprocess
    environment:
      - INFERENCE_URL=http://inference:9003/infer
      - FRAME_WIDTH=640
      - FRAME_HEIGHT=360
    ports: ["9002:9002"]
    depends_on:
      - inference
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:9002/readyz').getcode()==200 else sys.exit(1)"]
      interval: 5s
      timeout: 3s
      retries: 10
  inference:
    build: ../../services/inference
    environment:
      - MODEL_PATH=/app/assets/yolov8n.onnx
      - CONF_THRESHOLD=${CONF_THRESHOLD:-0.5}
    ports: ["9003:9003"]
    volumes:
      - ../../assets:/app/assets:ro
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:9003/readyz').getcode()==200 else sys.exit(1)"]
      interval: 5s
      timeout: 3s
      retries: 10
  results_adapter:
    build: ../../services/results_adapter
    environment:
      - MQTT_BROKER=mosquitto
      - MQTT_PORT=1883
      - CONF_THRESHOLD=${CONF_THRESHOLD:-0.5}
    ports: ["9004:9004"]
    depends_on:
      - mosquitto
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request,sys; sys.exit(0) if urllib.request.urlopen('http://localhost:9004/readyz').getcode()==200 else sys.exit(1)"]
      interval: 5s
      timeout: 3s
      retries: 10
  ui:
    build: ../../ui/operator
    ports: ["5173:80"]
    depends_on:
      - results_adapter
  prometheus:
    image: prom/prometheus
    volumes:
      - ../../ops/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports: ["9090:9090"]
  grafana:
    image: grafana/grafana
    ports: ["3000:3000"]
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ../../ops/grafana/provisioning:/etc/grafana/provisioning:ro
      - ../../ops/grafana/dashboards:/var/lib/grafana/dashboards:ro


